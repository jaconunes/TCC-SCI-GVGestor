unit uCadAmbiente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uPadraoCadastroGVGESTOR,
  System.ImageList, Vcl.ImgList, Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.ToolWin,
  Vcl.StdCtrls, EditSCI, Datasnap.DBClient, Data.Db;

type
  TfrCadAmbiente = class(TfrPadraoCadastroGVGESTOR)
    ToolButton4: TToolButton;
    ToolButton5: TToolButton;
    ToolButton6: TToolButton;
    ToolButton7: TToolButton;
    edCodigo: TEdit_Numero_PEDSCI;
    Label1: TLabel;
    edNome: TEdit;
    Label2: TLabel;
    Label3: TLabel;
    edObs: TEdit;
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btPesquisarClick(Sender: TObject);
  private
    { Private declarations }
    wCodVistoria : Integer;
  public
    { Public declarations }
    function setTabela: TClientDataSet; override;
    function setIDEdit: TWinControl; override;
    function setLastEdit: TWinControl; override;
    procedure CarregaCampos; override;
    procedure SalvarCampos; override;
    function ValidaCampos: Boolean; override;
    function getID: Boolean; override;
  end;

var
  frCadAmbiente: TfrCadAmbiente;

implementation

{$R *.dfm}

uses udmDadosGVGESTOR, uCadVistoria, uConsAmbiente;

{ TfrCadAmbiente }

procedure TfrCadAmbiente.btPesquisarClick(Sender: TObject);
begin
  inherited;
  TfrConsAmbiente.Create(edCodigo);
end;

procedure TfrCadAmbiente.CarregaCampos;
begin
  edNome.Text := FTabela.FieldByName('BDNOME').AsString;
  edObs.Text  := FTabela.FieldByName('BDOBSADC').AsString;
end;

procedure TfrCadAmbiente.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if (Owner is TForm) and (not TForm(Owner).Enabled) then
     TForm(Owner).Enabled := True;
end;

procedure TfrCadAmbiente.FormShow(Sender: TObject);
begin
  inherited;
  if Owner is TfrCadVistoria then
     begin
       TfrCadVistoria(Owner).Enabled := False;
       wCodVistoria := TfrCadVistoria(Owner).edCodigo.Codigo;
       edCodigo.SetFocus;
     end;
end;

function TfrCadAmbiente.getID: Boolean;
begin
  Result := False;// define padrão false
  pLimpaFiltros(FTabela);
  FTabela.IndexFieldNames := 'BDCODAMB';
  if Assigned(FTabela) and Assigned(edCodigo) then // verificar se a tabela e o campo chave foi informado para não dar erro ao tentar acessar as variáveis
     begin
       Result := FTabela.FindKey([edCodigo.Text]);
     end;
end;

procedure TfrCadAmbiente.SalvarCampos;
begin
  FTabela.FieldByName('BDCODAMB').AsInteger   := edCodigo.Codigo;
  FTabela.FieldByName('BDNOME').AsString      := edNome.Text;
  FTabela.FieldByName('BDOBSADC').AsString    := edObs.Text;
  FTabela.FieldByName('BDCODVIST').AsInteger  := wCodVistoria; //Código da vistoria
end;

function TfrCadAmbiente.setIDEdit: TWinControl;
begin
  Result := edCodigo;
end;

function TfrCadAmbiente.setLastEdit: TWinControl;
begin
  Result := edObs;
end;

function TfrCadAmbiente.setTabela: TClientDataSet;
begin
  Result := dmTabelas.tbAmbiente;
end;

function TfrCadAmbiente.ValidaCampos: Boolean;
begin
  Result := True;
end;

end.
